<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.scene.dao.UserMapper">
    <resultMap id="BaseResultMap" type="cn.scene.model.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="photo" jdbcType="VARCHAR" property="photo"/>
        <result column="jifen" jdbcType="INTEGER" property="jifen"/>
        <result column="is_member" jdbcType="TINYINT" property="isMember"/>
        <result column="start_time" jdbcType="DATE" property="startTime"/>
        <result column="al_numbers" jdbcType="INTEGER" property="alNumbers"/>
        <result column="numbers" jdbcType="INTEGER" property="numbers"/>
        <result column="is_read" jdbcType="BIT" property="isRead"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, photo, jifen, is_member, start_time, al_numbers, numbers, is_read
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="cn.scene.model.User">
    insert into user (id, name, photo, 
      jifen, is_member, start_time, 
      al_numbers, numbers, is_read
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, 
      #{jifen,jdbcType=INTEGER}, #{isMember,jdbcType=TINYINT}, #{startTime,jdbcType=DATE}, 
      #{alNumbers,jdbcType=INTEGER}, #{numbers,jdbcType=INTEGER}, #{isRead,jdbcType=BIT}
      )
  </insert>
    <insert id="insertSelective" parameterType="cn.scene.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="photo != null">
                photo,
            </if>
            <if test="jifen != null">
                jifen,
            </if>
            <if test="isMember != null">
                is_member,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="alNumbers != null">
                al_numbers,
            </if>
            <if test="numbers != null">
                numbers,
            </if>
            <if test="isRead != null">
                is_read,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="photo != null">
                #{photo,jdbcType=VARCHAR},
            </if>
            <if test="jifen != null">
                #{jifen,jdbcType=INTEGER},
            </if>
            <if test="isMember != null">
                #{isMember,jdbcType=TINYINT},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=DATE},
            </if>
            <if test="alNumbers != null">
                #{alNumbers,jdbcType=INTEGER},
            </if>
            <if test="numbers != null">
                #{numbers,jdbcType=INTEGER},
            </if>
            <if test="isRead != null">
                #{isRead,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.scene.model.User">
        update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="photo != null">
                photo = #{photo,jdbcType=VARCHAR},
            </if>
            <if test="jifen != null">
                jifen = #{jifen,jdbcType=INTEGER},
            </if>
            <if test="isMember != null">
                is_member = #{isMember,jdbcType=TINYINT},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=DATE},
            </if>
            <if test="alNumbers != null">
                al_numbers = #{alNumbers,jdbcType=INTEGER},
            </if>
            <if test="numbers != null">
                numbers = #{numbers,jdbcType=INTEGER},
            </if>
            <if test="isRead != null">
                is_read = #{isRead,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.scene.model.User">
        update user
        set name = #{name,jdbcType=VARCHAR},
          photo = #{photo,jdbcType=VARCHAR},
          jifen = #{jifen,jdbcType=INTEGER},
          is_member = #{isMember,jdbcType=TINYINT},
          start_time = #{startTime,jdbcType=DATE},
          al_numbers = #{alNumbers,jdbcType=INTEGER},
          numbers = #{numbers,jdbcType=INTEGER},
          is_read = #{isRead,jdbcType=BIT}
        where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByIsRade" parameterType="java.lang.Integer">
        UPDATE user SET is_read=0 WHERE id=#{id,dbcType=INTEGER}
    </update>
</mapper>