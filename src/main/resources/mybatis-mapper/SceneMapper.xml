<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.scene.dao.SceneMapper">
    <resultMap id="BaseResultMap" type="cn.scene.model.Scene">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="cover" jdbcType="VARCHAR" property="cover"/>
        <result column="music" jdbcType="VARCHAR" property="music"/>
        <result column="m_title" jdbcType="VARCHAR" property="mTitle"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="describes" jdbcType="VARCHAR" property="describes"/>
        <result column="times" jdbcType="DATE" property="times"/>
        <result column="types" jdbcType="INTEGER" property="types"/>
        <result column="hit_count" jdbcType="INTEGER" property="hitCount"/>
        <result column="jifen" jdbcType="INTEGER" property="jifen"/>
        <result column="from_scene" jdbcType="INTEGER" property="fromScene"/>
        <result column="counts" jdbcType="INTEGER" property="counts"/>
        <result column="is_issue" jdbcType="TINYINT" property="isIssue"/>
        <result column="is_delicate" jdbcType="TINYINT" property="isDelicate"/>
        <result column="is_del" jdbcType="TINYINT" property="isDel"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, code, cover, music, m_title, title, describes, times, types, hit_count,
        jifen, from_scene, counts, is_issue, is_delicate, is_del
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from scene
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from scene
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="cn.scene.model.Scene">
        insert into scene (id, user_id, code,
        cover, music, m_title,
        title, describes, times,
        types, hit_count, jifen,
        from_scene, counts, is_issue,
        is_delicate, is_del)
        values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR},
        #{cover,jdbcType=VARCHAR}, #{music,jdbcType=VARCHAR}, #{mTitle,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR}, #{describes,jdbcType=VARCHAR}, #{times,jdbcType=DATE},
        #{types,jdbcType=INTEGER}, #{hitCount,jdbcType=INTEGER}, #{jifen,jdbcType=INTEGER},
        #{fromScene,jdbcType=INTEGER}, #{counts,jdbcType=INTEGER}, #{isIssue,jdbcType=TINYINT},
        #{isDelicate,jdbcType=TINYINT}, #{isDel,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="cn.scene.model.Scene">
        insert into scene
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="cover != null">
                cover,
            </if>
            <if test="music != null">
                music,
            </if>
            <if test="mTitle != null">
                m_title,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="describes != null">
                describes,
            </if>
            <if test="times != null">
                times,
            </if>
            <if test="types != null">
                types,
            </if>
            <if test="hitCount != null">
                hit_count,
            </if>
            <if test="jifen != null">
                jifen,
            </if>
            <if test="fromScene != null">
                from_scene,
            </if>
            <if test="counts != null">
                counts,
            </if>
            <if test="isIssue != null">
                is_issue,
            </if>
            <if test="isDelicate != null">
                is_delicate,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="cover != null">
                #{cover,jdbcType=VARCHAR},
            </if>
            <if test="music != null">
                #{music,jdbcType=VARCHAR},
            </if>
            <if test="mTitle != null">
                #{mTitle,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="describes != null">
                #{describes,jdbcType=VARCHAR},
            </if>
            <if test="times != null">
                #{times,jdbcType=DATE},
            </if>
            <if test="types != null">
                #{types,jdbcType=INTEGER},
            </if>
            <if test="hitCount != null">
                #{hitCount,jdbcType=INTEGER},
            </if>
            <if test="jifen != null">
                #{jifen,jdbcType=INTEGER},
            </if>
            <if test="fromScene != null">
                #{fromScene,jdbcType=INTEGER},
            </if>
            <if test="counts != null">
                #{counts,jdbcType=INTEGER},
            </if>
            <if test="isIssue != null">
                #{isIssue,jdbcType=TINYINT},
            </if>
            <if test="isDelicate != null">
                #{isDelicate,jdbcType=TINYINT},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.scene.model.Scene">
        update scene
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="cover != null">
                cover = #{cover,jdbcType=VARCHAR},
            </if>
            <if test="music != null">
                music = #{music,jdbcType=VARCHAR},
            </if>
            <if test="mTitle != null">
                m_title = #{mTitle,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="describes != null">
                describes = #{describes,jdbcType=VARCHAR},
            </if>
            <if test="times != null">
                times = #{times,jdbcType=DATE},
            </if>
            <if test="types != null">
                types = #{types,jdbcType=INTEGER},
            </if>
            <if test="hitCount != null">
                hit_count = #{hitCount,jdbcType=INTEGER},
            </if>
            <if test="jifen != null">
                jifen = #{jifen,jdbcType=INTEGER},
            </if>
            <if test="fromScene != null">
                from_scene = #{fromScene,jdbcType=INTEGER},
            </if>
            <if test="counts != null">
                counts = #{counts,jdbcType=INTEGER},
            </if>
            <if test="isIssue != null">
                is_issue = #{isIssue,jdbcType=TINYINT},
            </if>
            <if test="isDelicate != null">
                is_delicate = #{isDelicate,jdbcType=TINYINT},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.scene.model.Scene">
        update scene
        set user_id = #{userId,jdbcType=INTEGER},
          code = #{code,jdbcType=VARCHAR},
          cover = #{cover,jdbcType=VARCHAR},
          music = #{music,jdbcType=VARCHAR},
          m_title = #{mTitle,jdbcType=VARCHAR},
          title = #{title,jdbcType=VARCHAR},
          describes = #{describes,jdbcType=VARCHAR},
          times = #{times,jdbcType=DATE},
          types = #{types,jdbcType=INTEGER},
          hit_count = #{hitCount,jdbcType=INTEGER},
          jifen = #{jifen,jdbcType=INTEGER},
          from_scene = #{fromScene,jdbcType=INTEGER},
          counts = #{counts,jdbcType=INTEGER},
          is_issue = #{isIssue,jdbcType=TINYINT},
          is_delicate = #{isDelicate,jdbcType=TINYINT},
          is_del = #{isDel,jdbcType=TINYINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM scene WHERE is_del=1 AND is_issue=1 AND is_delicate=1
    </select>
    <select id="selectDelicate" resultMap="BaseResultMap">
        SELECT id,code,cover,title,jifen,counts FROM scene
        WHERE is_issue=1 AND is_del=1 AND is_delicate=1
        ORDER BY id DESC
    </select>
    <select id="selectNews" resultMap="BaseResultMap">
        SELECT id,code,cover,title,jifen,counts FROM scene
        WHERE is_issue=1 AND is_del=1
        ORDER BY id DESC limit 0,12
    </select>
    <select id="selectPhotoByHitCount" resultMap="BaseResultMap">
        SELECT id,code,cover,title,jifen,counts FROM scene
        WHERE is_issue=1 AND is_del=1 AND types IN (1,2,3,4)
        ORDER BY hit_count DESC
    </select>
    <select id="selectPhotoCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM scene
        WHERE is_issue=1 AND is_del=1 AND types IN (1,2,3,4)
    </select>
    <select id="selectCharge" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT id,code,cover,title,jifen,counts FROM scene
        WHERE is_issue=1 AND is_del=1 AND types = #{types,jdbcType=INTEGER} AND jifen>0
        ORDER BY hit_count DESC
    </select>
    <select id="selectFree" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT id,code,cover,title,jifen,counts FROM scene
        WHERE is_issue=1 AND is_del=1 AND types = #{types,jdbcType=INTEGER} AND jifen=0
        ORDER BY hit_count DESC
    </select>
    <select id="selectByFromScene" resultMap="BaseResultMap">
        SELECT id,code,cover,times,title,jifen,hit_count,is_issue FROM scene
        WHERE is_del=1 AND user_id=#{userId,jdbcType=INTEGER}
        <if test="fromId==0">
            AND from_scene=0
        </if>
        <if test="fromId==1">
            AND from_scene>0
        </if>
    </select>
    <update id="updateByIsIssue">
        UPDATE scene SET is_issue=1,jifen = #{jifen,jdbcType=INTEGER}
        WHERE id=#{id,jdbcType=INTEGER}
    </update>
    <select id="selectByApartInfo" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT title,describes,m_title FROM scene WHERE id=#{id,jdbcType=INTEGER}
    </select>
    <update id="updateIsDel" parameterType="java.lang.Integer">
        UPDATE scene SET is_del=0 WHERE id=#{id,jdbcType=INTEGER}
    </update>
    <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM scene
        WHERE is_issue=1 AND user_id = #{userId,jdbcType=INTEGER}
    </select>
    <insert id="getNewsId" parameterType="cn.scene.model.Scene" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO scene(user_id,code,times,from_scene)
        VALUE (#{userId,jdbcType=INTEGER},#{code,jdbcType=VARCHAR},#{times,jdbcType=DATE},#{fromScene,jdbcType=INTEGER})
    </insert>
    <update id="updateIsIssue" parameterType="java.lang.Integer">
        UPDATE scene SET is_issue=0 WHERE id=#{id,jdbcType=INTEGER}
    </update>
    <update id="updateMusicById">
        UPDATE scene SET music = #{music,jdbcType=VARCHAR},m_title = #{mTitle,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectInfoByTitle" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT id,code,cover,title,jifen,counts FROM scene
        WHERE is_del=1 AND title LIKE concat(concat("%",#{content,jdbcType=VARCHAR}),"%")
        OR describes LIKE concat(concat("%",#{content,jdbcType=VARCHAR}),"%")
        ORDER BY id DESC
    </select>
    <update id="updateCoverById">
        UPDATE scene SET cover = #{cover,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectInfoByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM scene
        WHERE is_del=1 and code = #{code,jdbcType=VARCHAR}
    </select>
    <update id="updateHitCountById" parameterType="java.lang.Integer">
        update scene SET hit_count = hit_count + 1
        where id=#{id,jdbcType=INTEGER}
    </update>
</mapper>